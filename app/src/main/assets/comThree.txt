Арифметические и логические
----------------------------
ADC - сложение с переносом
ADD - сложение
SBB - вычитание с заемом
SUB - вычитание
DEC - декремент
INC - инкремент
СМР - сравнение
NEG - изменить знак
TEST - побитное сравнение
BT - проверка состояния указанного бита в целочисленном значении и устанавливает флаг ZF, если бит равен 0, и сбрасывает его, если бит равен 1.
BTS - проверка состояния указанного бита и установка его в 1.
BTR - - проверка состояния указанного бита и сброс его в 0.
AND - логическое "И"
OR - логическое "ИЛИ"
XOR - логическое "Исключающее ИЛИ"
NOT - логическое "НЕ"
MOV - переслать данные
XCHG - обмен
RCL - циклический бит влево через флаг переноса
RCR - циклический бит вправо через флаг переноса
ROL - циклический сдвиг влево
ROR - циклический сдвиг вправо
SAL - арифметический сдвиг влево
SAR - арифметический сдвиг вправо
SHL - логический сдвиг влево
SHR - логический сдвиг вправо
DIV - беззнаковое деление
IDIV - деление со знаком
MUL - беззнаковое умножение
LEA - загрузка эффективного адреса

Строковые команды
-----------------
CMPS - сравнение строк
LODS - загрузить строковый операнд
MOVS - пересылка строк
SCAS - сравнить строковый операнд
STOS - сохранить строковый операнд

Команды перехода (управления потоком выводов)
---------------------------------------------
JMP - безусловный переход
JE (Jump if Equal) - переход если равны (флаг равен 0)
JNE (Jump if Not Equal) - переход если не равные (флаг не равен 0)
JG (Jump if Greater) - переход если больше (ZF = 0 и SF=OF)
JL (Jump if Less) - переход если меньше (SF ≠ OF)
JGE (Jump if Greater or Equal) - переход если больше или равно
JLE (Jump if Less or Equal) - переход если меньше или равно
JC (Jump if Carry) - переход если установлен флаг переноса
JNC (Jump if Not Carry) - переход если не установлен флаг переноса)
JO (Jump if Overflow) - переход если установлен флаг переполнения
JNO (Jump if Not Overflow) - переход если не установлен флаг переполнения
JP (Jump if Parity) - переход если установлен флаг четности
JNP (Jump if Not Parity) - переход если не установлен флаг четности

Команды работы со стеком
------------------------
PUSH - поместить операнд в стек
PUSHF - поместить в стек регистр FLAGS
PUSHFD - поместить в стек регистр EFLAGS
POP - извлечь операнд из стека
POP - извлечь из стека регистр FLAGS
POPFD - извлечь из стека регистр EFLAGS

Определение компонент адресов и переменных
------------------------------------------

$ - значение счетчика адреса текущей ячейки
SEG - сегментная компонента адреса переменной или метки
OFFSET - смещение адреса переменной или метки
LENGTH - длина в единицах определения (байтах или словах) любоей переменной, при определении которой был использован псевдооператор DUP
TYPE - для переменной возвращает
- 1, если она имеет тип BYTE
- 2 - WORD
- 4 - DD
- 8 - DQ
- 10 - DT
Для меток возвращает: 1 - атрибут NEAR, 2 - атрибут FAR
SIZE - определяет произведение LENGTH*TYPE
DUP - используется в псевдокомандах определения данных для распеределения и инициализации нескольких (n) единиц памяти
? - используется в псевдокомандах определения данных для резервирования памяти без её начальной инициализации