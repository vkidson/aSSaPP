В процессорах Intel операции с плавающей запятой выполняет специальное устройство – арифметический сопроцессор, который начиная с процессора 80486 встраивается в основной процессор.

Сопроцессор работает параллельно с целочисленным процессором. Параллельная работа уменьшает время обработки, позволяя математическому сопроцессору производить математические вычисления, в то время как процессор продолжает выполнять другие функции.


Для программиста сопроцессор состоит из восьми 80-битных регистров, регистра управления, регистра состояния, регистра признаков и указателей особых случаев. 80-битные регистры используются для хранения констант и промежуточных результатов в процессе вычислений, уменьшая, таким образом, число обращений к памяти и повышая одновременно и скорость, и доступность магистрали. Регистровое пространство может быть использовано как стек или как фиксированный набор регистров. Данные в регистрах хранятся во временном вещественном формате, который используется при всех вычислениях.

Поле ST в слове состояния определяет текущий верхний регистр стека. Операция загрузки уменьшает ST на единицу и загружает новую величину в верхний регистр стека. Операция извлечения и сохранения переписывает в нужное место величину верхнего регистра стека и увеличивает ST на единицу. Таким образом регистровый стек сопроцессора растет в направлении от старшего регистра к младшему.

Команды могут адресовать регистры прямо и косвенно. Команды, которые работают с вершиной стека, осуществляют косвенную адресацию регистра, на который указывает ST. Например, команда FSQRT замещает число в вершине стека его квадратным корнем; эта команда не получает операндов, так как в качестве операнда используется верхний регистр стека. Прямая адресация регистров зависит от вершины стека. Выражение ST определяет текущую вершину стека, а ST(i) ссылается на i-й регистр от ST. Например, если ST содержит двоичное 011 (регистр 3 находится в вершине стека), то команда FADD ST,ST(2) будет складывать регистры 3 и 5.


Слово состояния отражает все условия сопроцессора. Оно может быть сохранено в памяти по команде сопроцессора и затем проверено процессором. Слово состояния делится на несколько полей:

15 | B    | -- занято
      | C3 | -- код условий
      | ST | -- указатель вершины стека
      | C2 | -- код условий
      | C1 | -- код условий
      | C0 | -- код условий
7    | ES | -- общий флаг ошибки
      | SF | -- стековая ошибка
      | PE | -- потеря точности
      | UE | -- потеря значимости
      | OE | -- переполнение
      | ZE | -- деление на ноль
      | DE | -- денормализованный операнд
      Флаги ошибок(1 = ошибка)
0    | IE | -- неверная операция

Некоторые инструкции, например инструкции сравнения, передают свои результаты в качестве кодов условий (биты 14, 10-8). Основное назначение кодов условий – для условного ветвления.
Биты с 13 по 11 слова состояния указывают на регистр сопроцессора, который является текущей вершиной стека. Бит 7 – это поле запроса на прерывание, а биты 5-0 служат для индикации того, что устройство обработки чисел сопроцессора обнаружило ошибку при обработке команды.


Слово управления сопроцессора определяет его режим работы: точность вычислений, способ округления, реакцию на ошибки и др.:

15 |       | -- зарезервировано
      |       | -- зарезервировано
      |       | -- зарезервировано
      | IC  | -- управление бесконечностью
      | RC | -- управление округлением
      | PC | -- управление точностью
7    |IEM| -- маска разрешения прерываний
      |        | -- зарезервировано
      | PM | -- точность
      | UM | -- потеря значимости
      | OM | -- переполнение
      | ZM | -- деление на ноль
      | DM | -- денормализованный операнд
      Маски ошибок(1 = маска установлена)
0    | IM  | -- неверная операция

Слово управления загружается из памяти специальной командой, кроме того, содержимое регистра управления устанавливается при инициализации сопроцессора и может быть оставлено по умолчанию.

Маска разрешения прерываний: 0 – прерывания разрешены, 1 – прерывания запрещены (маскированы).

Управление точностью: 00 – 24 бита, 01 – зарезервировано, 10 – 53 бита, 11 – 64 бита.

Управление округлением: 00 – округлять до ближайшего или четного, 10 – округлять вверх, 01 – округлять вниз, 11 – отбрасывать.

Управление бесконечностью: 0 – проективная, 1 – аффинная.


Cлово признаков (тэгов) предназначено для пометки содержимого каждого регистра:

15 | TAG (7) |
      | TAG (7) |
      | TAG (6) |
      | TAG (6) |
      | TAG (5) |
      | TAG (5) |
7    | TAG (4) |
      | TAG (4) |
      | TAG (3) |
      | TAG (3) |
      | TAG (2) |
      | TAG (2) |
      | TAG (1) |
      | TAG (1) |
      | TAG (0) |
0    | TAG (0) |

Основная его функция – оптимизация работы сопроцессора под несколькими управляющими программами. Величины признаков:

00 – конечное ненулевое число,
01 – истинный нуль,
10 – специальное число (НЕчисло, бесконечность или денормализованное),
11 – пусто.

Указатели на ошибку необходимы для написанных пользователем программ обработки ошибок. Когда сопроцессор выполняет команду, то устройство управления хранит в регистрах указателя на ошибку адреса команды и операнда. Подпрограмма обработки ошибок может сохранить эти указатели в памяти и определить, какая команда привела к возникновению условия ошибки.


Арифметический сопроцессор работает с несколькими типами числовых данных, разделяя их на три класса: двоичные целые (три типа), десятичные целые (один тип), вещественные числа (три типа):

31                                                             0
    ┌────────────────────┐
    │        дополнительный код         │
    └────────────────────┘
        короткое целое (4 байта)

63                                                             0
    ┌────────────────────┐
    │        дополнительный код         │
    └────────────────────┘
        длинное целое (8 байтов)

79
78     |   S    |
72     |   ...   |
71     |    0   |
          | D17 |
          | D16 |
          | D15 |
          |   ...   |
          |  D1  |
0        |  D0  |
          |         |
          |         |
 упакованное десятичное (10 байтов)


31         30                      23 22                         0
   ┌───┬─────────┬──────────┐
   │ S     │ порядок         │ мантисса         │
   └───┴─────────┴──────────┘
      одинарная точность (смещение
    порядка = 127, неявный бит
    мантиссы)

63         62                      52 51                                0
     ┌───┬─────────┬────────────┐
     │ S     │ порядок         │  мантисса              │
     └───┴─────────┴────────────┘
	    двойная точность (смещение
     порядка = 1023, неявный бит
     мантиссы)

79         78                      64 63                                0
     ┌───┬─────────┬────────────┐
     │ S     │ порядок         │  мантисса              │
     └───┴─────────┴────────────┘
	    расширенная точность (смещение порядка = 16383)