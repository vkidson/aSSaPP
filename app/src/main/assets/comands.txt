
1. Основные псевдокоманды процессора (можно указать наверху, как заголовок страницы)

Управление сегментированием и счетчиком команд
----------------------------------------------
SEGMENT - определяет границы сегмента программы <..>
ASSUME - сообщает ассемблеру какой регистр сегмента связан с сегментом программы.<..>
GROUP - определяет список объектов, которые должны быть размещены в одном блоке памяти объемом 64КБ <..>
LABEL - представляет переменную или метку <..>

Определение данных (переменных)
-------------------------------
DB - определяет байты памяти
DW - определяет 2 байта памяти
DD - определяет 4 байта памяти
DQ - определяет 8 байтов памяти
DT - определяет 10 байтов памяти

Определение символичеких имен
-----------------------------
EQU - постоянно присваивает значение выражения имени <..>
= - значение выражения присваивается имени, но может быть переприсвоено

PROC - определение процедуры

Связывание модулей
------------------
PUBLIC - объявляет имя доступным другим модулям программы, которые должны быть присоединены к данному модулю
EXTRN - указывает, что имя определено в другом модуле программы
NAME - присваивает внутреннее имя объектному модулю, генерируемому ассемблером
END - конец ассемблирования


2. Операции ассемблера

Арифметические и логические
----------------------------
ADC - сложение с переносом
ADD - сложение
SBB - вычитание с заемом
SUB - вычитание
DEC - декремент
INC - инкремент
СМР - сравнение
NEG - изменить знак
TEST - побитное сравнение
AND - логическое "И"
OR - логическое "ИЛИ"
XOR - логическое "Исключающее ИЛИ"
NOT - логическое "НЕ"
MOV - переслать данные
XCHG - обмен
RCL - циклический бит влево через флаг переноса
RCR - циклический бит вправо через флаг переноса
ROL - циклический сдвиг влево
ROR - циклический сдвиг вправо
SAL - арифметический сдвиг влево
SAR - арифметический сдвиг вправо
SHL - логический сдвиг влево
SHR - логический сдвиг вправо
DIV - беззнаковое деление
IDIV - деление со знаком
MUL - беззнаковое умножение
LEA - загрузка эффективного адреса

Строковые команды
-----------------
CMPS - сравнение строк
LODS - загрузить строковый операнд
MOVS - пересылка строк
SCAS - сравнить строковый операнд
STOS - сохранить строковый операнд

Команды перехода (управления потоком выводов)
---------------------------------------------
JMP - безусловный переход
JE (Jump if Equal) - переход если равны (флаг равен 0)
JNE (Jump if Not Equal) - переход если не равные (флаг не равен 0)
JG (Jump if Greater) - переход если больше (ZF = 0 и SF=OF)
JL (Jump if Less) - переход если меньше (SF ≠ OF)
JGE (Jump if Greater or Equal) - переход если больше или равно
JLE (Jump if Less or Equal) - переход если меньше или равно
JC (Jump if Carry) - переход если установлен флаг переноса
JNC (Jump if Not Carry) - переход если не установлен флаг переноса)
JO (Jump if Overflow) - переход если установлен флаг переполнения
JNO (Jump if Not Overflow) - переход если не установлен флаг переполнения
JP (Jump if Parity) - переход если установлен флаг четности
JNP (Jump if Not Parity) - переход если не установлен флаг четности


Команды работы со стеком
------------------------
PUSH - поместить операнд в стек
PUSHF - поместить в стек регистр FLAGS
PUSHFD - поместить в стек регистр EFLAGS
POP - извлечь операнд из стека
POP - извлечь из стека регистр FLAGS
POPFD - извлечь из стека регистр EFLAGS


Определение компонент адресов и переменных
------------------------------------------

$ - значение счетчика адреса текущей ячейки
SEG - сегментная компонента адреса переменной или метки
OFFSET - смещение адреса переменной или метки
LENGTH - длина в единицах определения (байтах или словах) любоей переменной, при определении которой был использован псевдооператор DUP
TYPE - для переменной возвращает
- 1, если она имеет тип BYTE
- 2 - WORD
- 4 - DD
- 8 - DQ
- 10 - DT
Для меток возвращает: 1 - атрибут NEAR, 2 - атрибут FAR
SIZE - определяет произведение LENGTH*TYPE
DUP - используется в псевдокомандах определения данных для распеределения и инициализации нескольких (n) единиц памяти
? - используется в псевдокомандах определения данных для резервирования памяти без её начальной инициализации


3. Команды арифметического сопроцессора

Команды пересылки данных
------------------------
FLD - ST(i) - загрузка новой вершины стека
FSTPST - (i) - извлечение из стека
FST - ST(i) - копирование вершины стека
FXCH - ST(i) - обмен вершины стека с заданным регистром стека
FLDLG2 - загрузка новой вершины стека константой lg2
FLDLN2 - загрузка новой вершины стека константой ln2
FLDL2E - загрузка новой вершины стека константой log2e
FLDL2T - загрузка новой вершины стека константой log210
FLDPI - загрузка новой вершины стека константой π
FLDZ - загрузка новой вершины стека нулем
FLD1 - загрузка новой вершины стека единицей

Команды арифметических операций
------------------------
Базовые арифметические команды
------------------------
FADD - (ST, ST(i) / ST(i), ST) - сложение
FSUB - (ST, ST(i) / ST(i), ST) - вычитание
FMUL - (ST, ST(i) / ST(i), ST) - умножение
FDIV - (ST, ST(i) /ST(i), ST) - деление

Дополнительные арифметические команды
------------------------
FABS - нахождение модуля
FCHS - смена знака
FSQRT - извлечение квадратного корня
FRNDINT - округление до целого
FPREM - нахождение частичного остатка
FSCALE - масштабирование
FXTRACT - Нахождение мантиссы и несмещенного порядка


Команды сравнения
------------------------
FCOM - (ST(i)) - сравнение
FCOMP - (ST(i)) - сравнение с извлечением из стека
FCOMPP - сравнение с двойным извлечением из стека
FICOM - (word_integer) - сравнение с целым операндом в памяти
FICOMP - (word_integer) - сравнение с целым операндом в памяти и извлечение из стека
FCOMI - (ST,ST(i)) - сравнение и установка флагов CF, ZF.
FCOMIP - сравнение с извлечением из стека и установка флагов CF, ZF центрального процессора (начиная с Pentium II). Машинный код: db 0dfh, 0fih.
FTST - сравнение с нулем
FXAM - проверка содержимого st(0)

Трансцендентные команды
------------------------
FPATAN - вычисление частичного арктангенса
FPTAN - вычисление частичного тангенса
FCOS - вычисление косинуса (начиная с 80387)
FSINCOS - вычисление синуса и косинуса (начиная с 80387)
F2XM1 - вычисление функции 2x - 1
FYL2X - вычисление функции y log2 x
FYL2XP1 - вычисление функции y log2 (x+1)

Команды управления
------------------------
FCLEX - сброс флагов ошибок, флага запроса на прерывание и флага занятости в слове состояния
FDECSTP - уменьшение на 1 указателя стека в слове состояния
FDISI - запрещение прерываний в слове состояния
FENI - разрешение прерываний в слове состояния
FFREE - (ST(i)) - освобождение регистра в слове тэгов
FINCSTP - увеличение на 1 указателя стека в слове состояния
FINIT - инициализация (сброс) сопроцессора
FLDCW - (word) - загрузка слова управления
FLDENV - (address) - загрузка программной среды сопроцессора (всех регистров, кроме стековых)
FNOP - пустая операция
FRSTOR - (address) - загрузка полного состояния сопроцессора (всех регистров, включая стековые)
FSAVE - (address) - сохранение полного состояния сопроцессора (всех регистров, включая стековые)
FSTCW - (word) - сохранение слова управления
FSTENV - (address) - сохранение программной среды сопроцессора (всех регистров, кроме стековых)
FSTSW - (word) - сохранение слова состояния в памяти
FSTSW AX - сохранение слова состояния в регистре AX центрального процессора (начиная с 80287)
FWAIT - ожидание (альтернативная мнемоника команды центрального процессора WAIT)



